{"ast":null,"code":"var _jsxFileName = \"C:\\\\webdev\\\\practise\\\\The-Weirdos-NFT-Website-Starter-Code\\\\src\\\\components\\\\DrawSvg.js\",\n  _s = $RefreshSig$();\nimport React, { useLayoutEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport Vector from \"../Icons/Vector\";\nimport gsap from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VectorContainer = styled.div`\n  position: absolute;\n  top: 0.5rem;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n`;\n_c = VectorContainer;\nconst DrawSvg = () => {\n  _s();\n  const ref = useRef(null);\n  gsap.registerPlugin(ScrollTrigger);\n  useLayoutEffect(() => {\n    let element = ref.current;\n    let svg = document.getElementsByClassName(\"svg-path\")[0];\n    const length = svg.getBoundingClientRect();\n\n    // start positioning of svg drawing\n\n    svg.style.strokeDasharray = length;\n\n    // hide svg before scrolling start\n    svg.style.strokeDashoffset = length;\n    let t1 = gsap.timeline({\n      scrollTrigger: {\n        trigger: element,\n        start: \"top center\",\n        end: \"bottom bottom\",\n        onUpdate: self => {\n          const draw = length * self.progress;\n\n          // also reverse the drawing when scroll goes up\n\n          svg.style.strokeDashoffset = length - draw;\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(VectorContainer, {\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(Vector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawSvg, \"JkctLsMDw5W2MbVlMaFRM76c/8g=\");\n_c2 = DrawSvg;\nexport default DrawSvg;\nvar _c, _c2;\n$RefreshReg$(_c, \"VectorContainer\");\n$RefreshReg$(_c2, \"DrawSvg\");","map":{"version":3,"names":["React","useLayoutEffect","useRef","styled","Vector","gsap","ScrollTrigger","jsxDEV","_jsxDEV","VectorContainer","div","_c","DrawSvg","_s","ref","registerPlugin","element","current","svg","document","getElementsByClassName","length","getBoundingClientRect","style","strokeDasharray","strokeDashoffset","t1","timeline","scrollTrigger","trigger","start","end","onUpdate","self","draw","progress","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/webdev/practise/The-Weirdos-NFT-Website-Starter-Code/src/components/DrawSvg.js"],"sourcesContent":["import React, { useLayoutEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Vector from \"../Icons/Vector\";\r\nimport gsap from \"gsap\";\r\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\r\n\r\nconst VectorContainer = styled.div`\r\n  position: absolute;\r\n  top: 0.5rem;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst DrawSvg = () => {\r\n  const ref = useRef(null);\r\n\r\n  gsap.registerPlugin(ScrollTrigger);\r\n\r\n  useLayoutEffect(() => {\r\n    let element = ref.current;\r\n\r\n    let svg = document.getElementsByClassName(\"svg-path\")[0];\r\n\r\n    const length = svg.getBoundingClientRect();\r\n\r\n    // start positioning of svg drawing\r\n\r\n    svg.style.strokeDasharray = length;\r\n\r\n    // hide svg before scrolling start\r\n    svg.style.strokeDashoffset = length;\r\n\r\n    let t1 = gsap.timeline({\r\n      scrollTrigger: {\r\n        trigger: element,\r\n        start: \"top center\",\r\n        end: \"bottom bottom\",\r\n        onUpdate: (self) => {\r\n          const draw = length * self.progress;\r\n\r\n          // also reverse the drawing when scroll goes up\r\n\r\n          svg.style.strokeDashoffset = length - draw;\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <VectorContainer ref={ref}>\r\n      <Vector />\r\n    </VectorContainer>\r\n  );\r\n};\r\n\r\nexport default DrawSvg;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,MAAM,QAAQ,OAAO;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,aAAa,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,eAAe,GAAGN,MAAM,CAACO,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAbIF,eAAe;AAerB,MAAMG,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,GAAG,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAExBG,IAAI,CAACU,cAAc,CAACT,aAAa,CAAC;EAElCL,eAAe,CAAC,MAAM;IACpB,IAAIe,OAAO,GAAGF,GAAG,CAACG,OAAO;IAEzB,IAAIC,GAAG,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAExD,MAAMC,MAAM,GAAGH,GAAG,CAACI,qBAAqB,CAAC,CAAC;;IAE1C;;IAEAJ,GAAG,CAACK,KAAK,CAACC,eAAe,GAAGH,MAAM;;IAElC;IACAH,GAAG,CAACK,KAAK,CAACE,gBAAgB,GAAGJ,MAAM;IAEnC,IAAIK,EAAE,GAAGrB,IAAI,CAACsB,QAAQ,CAAC;MACrBC,aAAa,EAAE;QACbC,OAAO,EAAEb,OAAO;QAChBc,KAAK,EAAE,YAAY;QACnBC,GAAG,EAAE,eAAe;QACpBC,QAAQ,EAAGC,IAAI,IAAK;UAClB,MAAMC,IAAI,GAAGb,MAAM,GAAGY,IAAI,CAACE,QAAQ;;UAEnC;;UAEAjB,GAAG,CAACK,KAAK,CAACE,gBAAgB,GAAGJ,MAAM,GAAGa,IAAI;QAC5C;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA,CAACC,eAAe;IAACK,GAAG,EAAEA,GAAI;IAAAsB,QAAA,eACxB5B,OAAA,CAACJ,MAAM;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEtB,CAAC;AAAC3B,EAAA,CAxCID,OAAO;AAAA6B,GAAA,GAAP7B,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}